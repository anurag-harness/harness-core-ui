/*
 * Copyright 2023 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */
/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query'

import type { ResponseServicesV2YamlMetadataDto } from '../schemas/ResponseServicesV2YamlMetadataDto'
import type { Failure } from '../schemas/Failure'
import type { Error } from '../schemas/Error'
import type { ServicesYamlMetadataApiInputV2 } from '../schemas/ServicesYamlMetadataApiInputV2'
import { fetcher, FetcherOptions } from 'services/fetcher'

export interface GetServicesYamlAndRuntimeInputsV2QueryQueryParams {
  accountIdentifier: string
  orgIdentifier?: string
  projectIdentifier?: string
  branch?: string
  repoIdentifier?: string
  getDefaultFromOtherRepo?: boolean
  parentEntityConnectorRef?: string
  parentEntityRepoName?: string
  parentEntityAccountIdentifier?: string
  parentEntityOrgIdentifier?: string
  parentEntityProjectIdentifier?: string
  repoName?: string
}

export type GetServicesYamlAndRuntimeInputsV2RequestBody = ServicesYamlMetadataApiInputV2

export type GetServicesYamlAndRuntimeInputsV2OkResponse = ResponseServicesV2YamlMetadataDto

export type GetServicesYamlAndRuntimeInputsV2ErrorResponse = Failure | Error

export interface GetServicesYamlAndRuntimeInputsV2Props
  extends Omit<
    FetcherOptions<GetServicesYamlAndRuntimeInputsV2QueryQueryParams, GetServicesYamlAndRuntimeInputsV2RequestBody>,
    'url'
  > {
  queryParams: GetServicesYamlAndRuntimeInputsV2QueryQueryParams
  body: GetServicesYamlAndRuntimeInputsV2RequestBody
}

export function getServicesYamlAndRuntimeInputsV2(
  props: GetServicesYamlAndRuntimeInputsV2Props
): Promise<GetServicesYamlAndRuntimeInputsV2OkResponse> {
  const { ...rest } = props

  return fetcher<
    GetServicesYamlAndRuntimeInputsV2OkResponse,
    GetServicesYamlAndRuntimeInputsV2QueryQueryParams,
    GetServicesYamlAndRuntimeInputsV2RequestBody
  >({
    url: `ng/api/servicesV2/v2/services-yaml-metadata`,
    method: 'POST',
    ...rest
  })
}

/**
 *
 */
export function useGetServicesYamlAndRuntimeInputsV2Query(
  props: GetServicesYamlAndRuntimeInputsV2Props,
  options?: Omit<
    UseQueryOptions<GetServicesYamlAndRuntimeInputsV2OkResponse, GetServicesYamlAndRuntimeInputsV2ErrorResponse>,
    'queryKey' | 'queryFn'
  >
) {
  return useQuery<GetServicesYamlAndRuntimeInputsV2OkResponse, GetServicesYamlAndRuntimeInputsV2ErrorResponse>(
    ['getServicesYamlAndRuntimeInputsV2', props.queryParams, props.body],
    ({ signal }) => getServicesYamlAndRuntimeInputsV2({ ...props, signal }),
    options
  )
}
